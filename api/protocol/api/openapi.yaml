openapi: 3.0.0
info:
  title: Index and Embedding API
  version: 1.0.0
servers:
- url: /
paths:
  /index:
    get:
      description: Retrieves a list of all Index entities.
      operationId: listIndexes
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Index'
                type: array
          description: A list of Indexes
        "401":
          description: Unauthorized. Authentication required to access this resource.
      summary: List all Indexes
      x-eov-operation-handler: controllers/DefaultController
    post:
      description: Endpoint to create a new Index entity.
      operationId: createIndex
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Index'
        required: true
      responses:
        "201":
          description: Index created successfully
        "400":
          description: Invalid input
        "401":
          description: Unauthorized. Authentication required to access this resource.
      security:
      - bearerAuth: []
      summary: Create a new Index
      x-eov-operation-handler: controllers/DefaultController
  /index/{indexId}:
    get:
      description: Retrieve an Index entity by its unique identifier.
      operationId: getIndex
      parameters:
      - explode: false
        in: path
        name: indexId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Index'
          description: Successful response
        "401":
          description: Unauthorized. Authentication required to access this resource.
        "404":
          description: Index not found
      summary: Get an Index by ID
      x-eov-operation-handler: controllers/DefaultController
    put:
      description: Update an existing Index entity by its ID.
      operationId: updateIndex
      parameters:
      - explode: false
        in: path
        name: indexId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Index'
        required: true
      responses:
        "200":
          description: Index updated successfully
        "400":
          description: Invalid input
        "401":
          description: Unauthorized. Authentication required to access this resource.
        "404":
          description: Index not found
      security:
      - bearerAuth: []
      summary: Update an Index by ID
      x-eov-operation-handler: controllers/DefaultController
  /item:
    get:
      description: Retrieves a list of all IndexItem entities.
      operationId: listIndexItems
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/IndexItem'
                type: array
          description: A list of IndexItems
        "401":
          description: Unauthorized. Authentication required to access this resource.
      summary: List all IndexItems
      x-eov-operation-handler: controllers/DefaultController
    post:
      description: Endpoint to create a new IndexItem entity.
      operationId: createIndexItem
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IndexItem'
        required: true
      responses:
        "201":
          description: IndexItem created successfully
        "400":
          description: Invalid input
        "401":
          description: Unauthorized. Authentication required to access this resource.
      security:
      - bearerAuth: []
      summary: Create a new IndexItem
      x-eov-operation-handler: controllers/DefaultController
  /item/{itemId}:
    get:
      description: Retrieve an IndexItem entity by its unique identifier.
      operationId: getIndexItem
      parameters:
      - explode: false
        in: path
        name: itemId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IndexItem'
          description: Successful response
        "401":
          description: Unauthorized. Authentication required to access this resource.
        "404":
          description: IndexItem not found
      summary: Get an IndexItem by ID
      x-eov-operation-handler: controllers/DefaultController
    put:
      description: Update an existing IndexItem entity by its ID.
      operationId: updateIndexItem
      parameters:
      - explode: false
        in: path
        name: itemId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IndexItem'
        required: true
      responses:
        "200":
          description: IndexItem updated successfully
        "400":
          description: Invalid input
        "401":
          description: Unauthorized. Authentication required to access this resource.
        "404":
          description: IndexItem not found
      security:
      - bearerAuth: []
      summary: Update an IndexItem by ID
      x-eov-operation-handler: controllers/DefaultController
  /embedding:
    get:
      description: Retrieves a list of all Embedding entities.
      operationId: listEmbeddings
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Embedding'
                type: array
          description: A list of Embeddings
        "401":
          description: Unauthorized. Authentication required to access this resource.
      summary: List all Embeddings
      x-eov-operation-handler: controllers/DefaultController
    post:
      description: Endpoint to create a new Embedding entity.
      operationId: createEmbedding
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Embedding'
        required: true
      responses:
        "201":
          description: Embedding created successfully
        "400":
          description: Invalid input
        "401":
          description: Unauthorized. Authentication required to access this resource.
      security:
      - bearerAuth: []
      summary: Create a new Embedding
      x-eov-operation-handler: controllers/DefaultController
  /embedding/{embeddingId}:
    get:
      description: Retrieve an Embedding entity by its unique identifier.
      operationId: getEmbedding
      parameters:
      - explode: false
        in: path
        name: embeddingId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Embedding'
          description: Successful response
        "401":
          description: Unauthorized. Authentication required to access this resource.
        "404":
          description: Embedding not found
      summary: Get an Embedding by ID
      x-eov-operation-handler: controllers/DefaultController
    put:
      description: Update an existing Embedding entity by its ID.
      operationId: updateEmbedding
      parameters:
      - explode: false
        in: path
        name: embeddingId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Embedding'
        required: true
      responses:
        "200":
          description: Embedding updated successfully
        "400":
          description: Invalid input
        "401":
          description: Unauthorized. Authentication required to access this resource.
        "404":
          description: Embedding not found
      security:
      - bearerAuth: []
      summary: Update an Embedding by ID
      x-eov-operation-handler: controllers/DefaultController
  /query:
    post:
      description: |
        This endpoint allows for a complex query against indexes, items, and embeddings, filtered by specific identifiers and categories. It supports querying based on Decentralized Identifiers (DIDs), item and index identifiers, and specific types of embeddings.
      operationId: query
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Query'
        required: true
      responses:
        "200":
          description: Query results
        "400":
          description: "Bad request, such as invalid input"
        "401":
          description: "Unauthorized, especially relevant if viewerDID is used for\
            \ access control"
        "500":
          description: Internal server error
      summary: Query
      x-eov-operation-handler: controllers/DefaultController
components:
  schemas:
    Index:
      example:
        accessControl:
          signerPublicKey: signerPublicKey
          signerFunction: signerFunction
        createdAt: 2000-01-23T04:56:07.000+00:00
        deletedAt: 2000-01-23T04:56:07.000+00:00
        controllerDID: controllerDID
        title: title
        version: version
        updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        title:
          type: string
        accessControl:
          $ref: '#/components/schemas/LITAccessControl'
        createdAt:
          format: date-time
          type: string
        updatedAt:
          format: date-time
          type: string
        deletedAt:
          format: date-time
          type: string
        controllerDID:
          type: string
        version:
          type: string
      type: object
    LITAccessControl:
      example:
        signerPublicKey: signerPublicKey
        signerFunction: signerFunction
      properties:
        signerPublicKey:
          type: string
        signerFunction:
          type: string
      type: object
    IndexItem:
      example:
        itemId: itemId
        createdAt: 2000-01-23T04:56:07.000+00:00
        deletedAt: 2000-01-23T04:56:07.000+00:00
        indexId: indexId
        version: version
        updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        indexId:
          type: string
        itemId:
          type: string
        createdAt:
          format: date-time
          type: string
        updatedAt:
          format: date-time
          type: string
        deletedAt:
          format: date-time
          type: string
        version:
          type: string
      type: object
    Embedding:
      example:
        modelName: modelName
        itemId: itemId
        createdAt: 2000-01-23T04:56:07.000+00:00
        deletedAt: 2000-01-23T04:56:07.000+00:00
        context:
          context: context
          contextDescription: contextDescription
          category: category
        indexId: indexId
        controllerDID: controllerDID
        vector:
        - 0.8008281904610115
        - 0.8008281904610115
        version: version
        updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        modelName:
          type: string
        vector:
          items:
            type: number
          type: array
        context:
          $ref: '#/components/schemas/EmbeddingContext'
        indexId:
          type: string
        itemId:
          type: string
        createdAt:
          format: date-time
          type: string
        updatedAt:
          format: date-time
          type: string
        deletedAt:
          format: date-time
          type: string
        controllerDID:
          type: string
        version:
          type: string
      type: object
    EmbeddingContext:
      example:
        context: context
        contextDescription: contextDescription
        category: category
      properties:
        context:
          type: string
        contextDescription:
          type: string
        category:
          type: string
      type: object
    Query:
      example:
        embeddingCategories:
        - embeddingCategories
        - embeddingCategories
        vectors:
        - 0.8008281904610115
        - 0.8008281904610115
        indexes:
        - indexes
        - indexes
        question: question
        dids:
        - dids
        - dids
        items:
        - items
        - items
        viewerDID: viewerDID
      properties:
        indexes:
          description: Array of indexes to be queried.
          items:
            type: string
          type: array
        dids:
          description: Array of DIDs for filtering or access control.
          items:
            type: string
          type: array
        items:
          description: Array of items within the indexes to be queried.
          items:
            type: string
          type: array
        embeddingCategories:
          description: Embeddings categories to be used in the query.
          items:
            type: string
          type: array
        vectors:
          description: Embeddings vector to be utilized for similarty search in the
            query.
          items:
            type: number
          type: array
        viewerDID:
          description: Decentralized Identifier of the viewer or user making the query.
          type: string
        question:
          description: The query string or question to be answered.
          type: string
      type: object
  securitySchemes:
    bearerAuth:
      bearerFormat: EIP-4361 Signature
      scheme: bearer
      type: http
